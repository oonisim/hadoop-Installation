- name: "Clean {{ _APP_HDFS_IN_DIR }} and {{ _APP_HDFS_OUT_DIR }} in HDFS"
  become: true
  become_user: "{{ HADOOP_ADMIN }}"
  shell: | 
    hadoop fs -rm -r -f {{ _APP_HDFS_IN_DIR }}
    hadoop fs -rm -r -f {{ _APP_HDFS_OUT_DIR }}
  environment: 
    PATH: "{{ ansible_env.PATH }}:{{ HADOOP_HOME }}/bin:{{ SPARK_HOME }}:/bin"
    JAVA_HOME: "{{ java_home.stdout }}"    
  ignore_errors: true
  
- name: "Clean {{ _APP_DATA_DIR }}"
  file:
    path:   "{{ _APP_DATA_DIR }}"
    state:  absent

#--------------------------------------------------------------------------------
# HDFS directory to store data to process
#--------------------------------------------------------------------------------
- name: "Create {{ _APP_HDFS_IN_DIR }} in HDFS"
  become: true
  become_user: "{{ HADOOP_ADMIN }}"
  shell: | 
    hadoop fs -mkdir -p {{ _APP_HDFS_IN_DIR }}
  environment: 
    PATH: "{{ ansible_env.PATH }}:{{ HADOOP_HOME }}/bin:{{ SPARK_HOME }}:/bin"
    JAVA_HOME: "{{ java_home.stdout }}"    

- name: "mkdir {{ _APP_DATA_DIR }}"
  file:
    path:   "{{ _APP_DATA_DIR }}"
    state:  directory
    owner:  "{{ SPARK_ADMIN }}"
    group:  "{{ HADOOP_GROUP }}"
    mode:   0770
    recurse: true

- name: "Download data file {{ _DATA_FILE_URL }}"
  get_url:
    url:    "{{ _DATA_FILE_URL }}"
    dest:   "{{ _APP_DATA_DIR }}"
    owner:  "{{ SPARK_ADMIN }}"
    group:  "{{ HADOOP_GROUP }}"
    mode:   0660

- name: "Get the archive file name to extract"
  shell: |
    zipinfo -1 {{ _DATA_FILE_URL | basename }}
  args:
    chdir: "{{ _APP_DATA_DIR }}"
  register: _filename

- name: "Place {{ _filename.stdout }} in HDFS"
  become: true
  become_user: "{{ HADOOP_ADMIN }}"
  # The first line is a header    
  shell: | 
    unzip -Dop {{ _DATA_FILE_URL | basename }} | \
    tail -n +2 | \
    hadoop fs -put -f - {{ _APP_HDFS_IN_DIR }}/{{ _filename.stdout }}
  args:
    chdir: "{{ _APP_DATA_DIR }}"
  environment: 
    PATH: "{{ ansible_env.PATH }}:{{ HADOOP_HOME }}/bin:{{ SPARK_HOME }}:/bin"
    JAVA_HOME: "{{ java_home.stdout }}"    
    
- name: "Change the owner of the dir/file to  {{ SPARK_ADMIN }} in HDFS for spark to read/write"
  become: true
  become_user: "{{ HADOOP_ADMIN }}"
  shell: | 
    hadoop fs -chown -R {{ SPARK_ADMIN }} {{ _APP_HDFS_IN_DIR }}
  environment: 
    PATH: "{{ ansible_env.PATH }}:{{ HADOOP_HOME }}/bin:{{ SPARK_HOME }}:/bin"
    JAVA_HOME: "{{ java_home.stdout }}"    

- name: "Verify placement"
  become: true
  become_user: "{{ HADOOP_ADMIN }}"
  shell: | 
    hadoop fs -ls {{ _APP_HDFS_IN_DIR }}
  environment: 
    PATH: "{{ ansible_env.PATH }}:{{ HADOOP_HOME }}/bin:{{ SPARK_HOME }}:/bin"
    JAVA_HOME: "{{ java_home.stdout }}"    
  